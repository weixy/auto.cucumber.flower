[
  {
    "id": "create-a-new-order-in-axle-and-process-it.",
    "tags": [
      {
        "name": "@AxleOrder",
        "line": 1
      }
    ],
    "description": "Create new Order\nAdd Carts\nSubmit, Accept and Approve it.",
    "name": "Create a new order in Axle and process it.",
    "keyword": "Feature",
    "line": 2,
    "elements": [
      {
        "description": "",
        "name": "",
        "keyword": "Background",
        "line": 6,
        "steps": [
          {
            "result": {
              "duration": 77056573519,
              "status": "failed",
              "error_message": "org.openqa.selenium.NoSuchElementException: {\"errorMessage\":\"Unable to find element with id \u0027page.sidebar.login\u0027\",\"request\":{\"headers\":{\"Accept-Encoding\":\"gzip,deflate\",\"Connection\":\"Keep-Alive\",\"Content-Length\":\"43\",\"Content-Type\":\"application/json; charset\u003dutf-8\",\"Host\":\"localhost:21404\",\"User-Agent\":\"Apache-HttpClient/4.3.2 (java 1.5)\"},\"httpVersion\":\"1.1\",\"method\":\"POST\",\"post\":\"{\\\"using\\\":\\\"id\\\",\\\"value\\\":\\\"page.sidebar.login\\\"}\",\"url\":\"/element\",\"urlParsed\":{\"anchor\":\"\",\"query\":\"\",\"file\":\"element\",\"directory\":\"/\",\"path\":\"/element\",\"relative\":\"/element\",\"port\":\"\",\"host\":\"\",\"password\":\"\",\"user\":\"\",\"userInfo\":\"\",\"authority\":\"\",\"protocol\":\"\",\"source\":\"/element\",\"queryKey\":{},\"chunks\":[\"element\"]},\"urlOriginal\":\"/session/68a36380-313a-11e4-9de4-6b54138235fa/element\"}}\nCommand duration or timeout: 8.27 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00272.42.2\u0027, revision: \u00276a6995d31c7c56c340d6f45a76976d43506cd6cc\u0027, time: \u00272014-06-03 10:52:47\u0027\nSystem info: host: \u0027b-jenkins-tools\u0027, ip: \u002710.30.20.172\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.2.0-67-generic\u0027, java.version: \u00271.7.0_55\u0027\nSession ID: 68a36380-313a-11e4-9de4-6b54138235fa\nDriver info: org.openqa.selenium.phantomjs.PhantomJSDriver\nCapabilities [{platform\u003dLINUX, acceptSslCerts\u003dfalse, javascriptEnabled\u003dtrue, browserName\u003dphantomjs, rotatable\u003dfalse, driverVersion\u003d1.1.0, locationContextEnabled\u003dfalse, version\u003d1.9.7, cssSelectorsEnabled\u003dtrue, databaseEnabled\u003dfalse, handlesAlerts\u003dfalse, browserConnectionEnabled\u003dfalse, webStorageEnabled\u003dfalse, nativeEvents\u003dtrue, proxy\u003d{proxyType\u003ddirect}, applicationCacheEnabled\u003dfalse, driverName\u003dghostdriver, takesScreenshot\u003dtrue}]\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:526)\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:393)\n\tat org.openqa.selenium.By$ById.findElement(By.java:214)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle.clickLogin(Axle.java:110)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle$$FastClassByCGLIB$$c6b6f0c0.invoke(\u003cgenerated\u003e)\n\tat net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n\tat org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:80)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect$1.eval(RetryForAspect.java:34)\n\tat nz.co.yellow.espresso.testutils.Retry.For(Retry.java:30)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect.retryForWithNullAllowed(RetryForAspect.java:30)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect.retryFor(RetryForAspect.java:21)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:621)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:610)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:65)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:161)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n\tat org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle$$EnhancerByCGLIB$$6f7f975e.clickLogin(\u003cgenerated\u003e)\n\tat nz.co.yellow.emerge.axle.reg.AxleCommonSteps.I_click_the_login_button(AxleCommonSteps.java:60)\n\tat nz.co.yellow.emerge.axle.reg.AxleCommonSteps.That_I_am_logged_into_Axle(AxleCommonSteps.java:99)\n\tat âœ½.Given That I am logged into Axle(nz/co/yellow/emerge/axle/reg/NewOrderPriceVerify.feature:7)\nCaused by: org.openqa.selenium.remote.ScreenshotException: Screen shot has been taken\nBuild info: version: \u00272.42.2\u0027, revision: \u00276a6995d31c7c56c340d6f45a76976d43506cd6cc\u0027, time: \u00272014-06-03 10:52:47\u0027\nSystem info: host: \u0027b-jenkins-tools\u0027, ip: \u002710.30.20.172\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.2.0-67-generic\u0027, java.version: \u00271.7.0_55\u0027\nDriver info: driver.version: RemoteWebDriver\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:136)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:393)\n\tat org.openqa.selenium.By$ById.findElement(By.java:214)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle.clickLogin(Axle.java:110)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle$$FastClassByCGLIB$$c6b6f0c0.invoke(\u003cgenerated\u003e)\n\tat net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n\tat org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:80)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect$1.eval(RetryForAspect.java:34)\n\tat nz.co.yellow.espresso.testutils.Retry.For(Retry.java:30)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect.retryForWithNullAllowed(RetryForAspect.java:30)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect.retryFor(RetryForAspect.java:21)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:621)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:610)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:65)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:161)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n\tat org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle$$EnhancerByCGLIB$$6f7f975e.clickLogin(\u003cgenerated\u003e)\n\tat nz.co.yellow.emerge.axle.reg.AxleCommonSteps.I_click_the_login_button(AxleCommonSteps.java:60)\n\tat nz.co.yellow.emerge.axle.reg.AxleCommonSteps.That_I_am_logged_into_Axle(AxleCommonSteps.java:99)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat cucumber.runtime.Utils$1.call(Utils.java:44)\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:12)\n\tat cucumber.runtime.Utils.invoke(Utils.java:40)\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:35)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:38)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:271)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.runBackground(CucumberScenario.java:49)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:38)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:83)\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:77)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:82)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)\nCaused by: org.openqa.selenium.remote.ErrorHandler$UnknownServerException: {\"errorMessage\":\"Unable to find element with id \u0027page.sidebar.login\u0027\",\"request\":{\"headers\":{\"Accept-Encoding\":\"gzip,deflate\",\"Connection\":\"Keep-Alive\",\"Content-Length\":\"43\",\"Content-Type\":\"application/json; charset\u003dutf-8\",\"Host\":\"localhost:21404\",\"User-Agent\":\"Apache-HttpClient/4.3.2 (java 1.5)\"},\"httpVersion\":\"1.1\",\"method\":\"POST\",\"post\":\"{\\\"using\\\":\\\"id\\\",\\\"value\\\":\\\"page.sidebar.login\\\"}\",\"url\":\"/element\",\"urlParsed\":{\"anchor\":\"\",\"query\":\"\",\"file\":\"element\",\"directory\":\"/\",\"path\":\"/element\",\"relative\":\"/element\",\"port\":\"\",\"host\":\"\",\"password\":\"\",\"user\":\"\",\"userInfo\":\"\",\"authority\":\"\",\"protocol\":\"\",\"source\":\"/element\",\"queryKey\":{},\"chunks\":[\"element\"]},\"urlOriginal\":\"/session/68a36380-313a-11e4-9de4-6b54138235fa/element\"}}\nBuild info: version: \u00272.42.2\u0027, revision: \u00276a6995d31c7c56c340d6f45a76976d43506cd6cc\u0027, time: \u00272014-06-03 10:52:47\u0027\nSystem info: host: \u0027b-jenkins-tools\u0027, ip: \u002710.30.20.172\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.2.0-67-generic\u0027, java.version: \u00271.7.0_55\u0027\nDriver info: driver.version: unknown\n"
            },
            "name": "That I am logged into Axle",
            "keyword": "Given ",
            "line": 7,
            "match": {
              "location": "AxleCommonSteps.That_I_am_logged_into_Axle()"
            }
          }
        ],
        "type": "background"
      },
      {
        "after": [
          {
            "result": {
              "duration": 286845012,
              "status": "passed"
            },
            "match": {
              "location": "HookSteps.completion(Scenario)"
            }
          }
        ],
        "id": "create-a-new-order-in-axle-and-process-it.;create-a-new-order-for-customer;;2",
        "tags": [
          {
            "name": "@AxleOrder",
            "line": 1
          }
        ],
        "before": [
          {
            "result": {
              "duration": 4452288499,
              "status": "passed"
            },
            "match": {
              "location": "HookSteps.initialization(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1768253,
              "status": "passed"
            },
            "match": {
              "location": "HookSteps.initialization(Scenario)"
            }
          }
        ],
        "description": "",
        "name": "Create a new order for customer",
        "keyword": "Scenario Outline",
        "line": 88,
        "steps": [
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click the customers menu option",
            "keyword": "When ",
            "line": 10,
            "match": {
              "location": "AxleCommonSteps.I_click_the_customers_menu_option()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I search for a customer called \"MercyAscot\"",
            "keyword": "And ",
            "line": 11,
            "match": {
              "arguments": [
                {
                  "val": "MercyAscot",
                  "offset": 32
                }
              ],
              "location": "CustomersSteps.I_search_for_a_customer_called(String)"
            },
            "matchedColumns": [
              0
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I view the customer called \"MercyAscot\"",
            "keyword": "And ",
            "line": 12,
            "match": {
              "arguments": [
                {
                  "val": "MercyAscot",
                  "offset": 28
                }
              ],
              "location": "CustomersSteps.I_view_the_customer_called(String)"
            },
            "matchedColumns": [
              0
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the customer name \"MercyAscot\" in working on info",
            "keyword": "And ",
            "line": 13,
            "match": {
              "arguments": [
                {
                  "val": "MercyAscot",
                  "offset": 28
                }
              ],
              "location": "CustomersSteps.I_verify_the_customer_name_in_working_on_info(String)"
            },
            "matchedColumns": [
              0
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the empty cart",
            "keyword": "And ",
            "line": 14,
            "match": {
              "location": "CustomersSteps.I_verify_the_empty_cart()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click New Order button in user \"MercyAscot\" detail page",
            "keyword": "And ",
            "line": 15,
            "match": {
              "arguments": [
                {
                  "val": "MercyAscot",
                  "offset": 34
                }
              ],
              "location": "CustomersSteps.I_click_New_Order_button_in_user_detail_page(String)"
            },
            "matchedColumns": [
              0
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the cart info for customer \"MercyAscot\"",
            "keyword": "And ",
            "line": 16,
            "match": {
              "arguments": [
                {
                  "val": "MercyAscot",
                  "offset": 37
                }
              ],
              "location": "CustomersSteps.I_verify_the_cart_info_for_customer(String)"
            },
            "matchedColumns": [
              0
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the initialized cart",
            "keyword": "And ",
            "line": 17,
            "match": {
              "location": "CustomersSteps.I_verify_the_initialized_cart()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I search for a product called \"Yellow Gold Listing\"",
            "keyword": "And ",
            "line": 18,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Gold Listing",
                  "offset": 31
                }
              ],
              "location": "CatalogsSteps.I_search_for_a_product_called(String)"
            },
            "matchedColumns": [
              1
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I view the product \"Yellow Gold Listing\"",
            "keyword": "And ",
            "line": 20,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Gold Listing",
                  "offset": 20
                }
              ],
              "location": "CustomersSteps.I_view_the_product(String)"
            },
            "matchedColumns": [
              1
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the product title \"Yellow Gold Listing\"",
            "keyword": "Then ",
            "line": 21,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Gold Listing",
                  "offset": 28
                }
              ],
              "location": "CatalogsSteps.I_verify_the_product_title(String)"
            },
            "matchedColumns": [
              1
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the product sub-title \"Yellow Digital Listings \u003e Yellow digital listing products\"",
            "keyword": "And ",
            "line": 22,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Digital Listings \u003e Yellow digital listing products",
                  "offset": 32
                }
              ],
              "location": "CatalogsSteps.I_verify_the_product_sub_title(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the product meta info:",
            "keyword": "And ",
            "line": 23,
            "match": {
              "location": "CatalogsSteps.I_verify_the_product_meta_info(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Meta1",
                  "Meta2"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Price from: $ 110.00 (MONTH)",
                  "*Expected delivery 96 hours"
                ],
                "line": 25
              }
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I add the product to cart",
            "keyword": "And ",
            "line": 27,
            "match": {
              "location": "CatalogsSteps.I_add_the_product_to_cart()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the order stage texts:",
            "keyword": "Then ",
            "line": 28,
            "match": {
              "location": "OrderProcessSteps.I_verify_the_order_stage_texts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Select",
                  "Item Details",
                  "Propose",
                  "Accept",
                  "Checkout and Complete"
                ],
                "line": 30
              }
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the current stage as \"Item Details\"",
            "keyword": "And ",
            "line": 31,
            "match": {
              "arguments": [
                {
                  "val": "Item Details",
                  "offset": 31
                }
              ],
              "location": "OrderProcessSteps.I_verify_the_current_stage_as(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the cart info for customer \"MercyAscot\"",
            "keyword": "And ",
            "line": 32,
            "match": {
              "arguments": [
                {
                  "val": "MercyAscot",
                  "offset": 37
                }
              ],
              "location": "CustomersSteps.I_verify_the_cart_info_for_customer(String)"
            },
            "matchedColumns": [
              0
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the base price of product \"$110.00\"",
            "keyword": "And ",
            "line": 33,
            "match": {
              "arguments": [
                {
                  "val": "$110.00",
                  "offset": 36
                }
              ],
              "location": "OrderProcessSteps.I_verify_the_base_price_of_product(String)"
            },
            "matchedColumns": [
              4
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I have hidden the side bar",
            "keyword": "And ",
            "line": 35,
            "match": {
              "location": "AxleCommonSteps.I_have_hidden_the_side_bar()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I select a category of \"Animal Health\"",
            "keyword": "And ",
            "line": 36,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 24
                }
              ],
              "location": "ItemDetailsSteps.I_select_a_category_of(String)"
            },
            "matchedColumns": [
              2
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I add a component with number \"1\" and type \"Enhanced Content (1 can be added)\"",
            "keyword": "And ",
            "line": 37,
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 31
                },
                {
                  "val": "Enhanced Content (1 can be added)",
                  "offset": 44
                }
              ],
              "location": "OrderProcessSteps.I_add_a_component_with_number(String,String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I add \"1\" section of \"Images\" in component",
            "keyword": "And ",
            "line": 38,
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 7
                },
                {
                  "val": "Images",
                  "offset": 22
                }
              ],
              "location": "OrderProcessSteps.I_add_section_of_in_component(String,String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I upload a file called \"TestLogo.jpg\" to component\u0027s \"Images\" section \"1\"",
            "keyword": "And ",
            "line": 39,
            "match": {
              "arguments": [
                {
                  "val": "TestLogo.jpg",
                  "offset": 24
                },
                {
                  "val": "Images",
                  "offset": 54
                },
                {
                  "val": "1",
                  "offset": 71
                }
              ],
              "location": "OrderProcessSteps.I_upload_a_file_called_to_components_section(String,String,String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I add \"1\" section of \"PDF / Coupon\" in component",
            "keyword": "And ",
            "line": 40,
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 7
                },
                {
                  "val": "PDF / Coupon",
                  "offset": 22
                }
              ],
              "location": "OrderProcessSteps.I_add_section_of_in_component(String,String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I upload a file called \"Test.pdf\" to component\u0027s \"PDF / Coupon\" section \"1\"",
            "keyword": "And ",
            "line": 41,
            "match": {
              "arguments": [
                {
                  "val": "Test.pdf",
                  "offset": 24
                },
                {
                  "val": "PDF / Coupon",
                  "offset": 50
                },
                {
                  "val": "1",
                  "offset": 73
                }
              ],
              "location": "OrderProcessSteps.I_upload_a_file_called_to_components_section(String,String,String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I have shown the side bar",
            "keyword": "And ",
            "line": 42,
            "match": {
              "location": "AxleCommonSteps.I_have_shown_the_side_bar()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click Next on Product Configure page",
            "keyword": "And ",
            "line": 43,
            "match": {
              "location": "OrderProcessSteps.I_click_next_on_product_configure_page()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the current stage as \"Propose\"",
            "keyword": "And ",
            "line": 45,
            "match": {
              "arguments": [
                {
                  "val": "Propose",
                  "offset": 31
                }
              ],
              "location": "OrderProcessSteps.I_verify_the_current_stage_as(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the Order Details",
            "keyword": "And ",
            "line": 46,
            "match": {
              "location": "OrderProcessSteps.I_verify_the_Order_Details()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the Sales Person",
            "keyword": "And ",
            "line": 47,
            "match": {
              "location": "OrderProcessSteps.I_verify_the_Sales_Person()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I select the billing account \"THE ASCOT HOSPITAL \u0026 CLINICS LTD (510435041)\" for customer \"MercyAscot\"",
            "keyword": "And ",
            "line": 48,
            "match": {
              "arguments": [
                {
                  "val": "THE ASCOT HOSPITAL \u0026 CLINICS LTD (510435041)",
                  "offset": 30
                },
                {
                  "val": "MercyAscot",
                  "offset": 90
                }
              ],
              "location": "OrderProcessSteps.I_select_customer_s_billing_account(String,String)"
            },
            "matchedColumns": [
              0,
              9
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I set \"Yellow Gold Listing\" contract term as \"10 months (Minimum*)\"",
            "keyword": "And ",
            "line": 49,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Gold Listing",
                  "offset": 7
                },
                {
                  "val": "10 months (Minimum*)",
                  "offset": 46
                }
              ],
              "location": "OrderProcessSteps.I_set_contract_termn_as(String,String)"
            },
            "matchedColumns": [
              1,
              7
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click reprice button of product \"Yellow Gold Listing\"",
            "keyword": "And ",
            "line": 50,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Gold Listing",
                  "offset": 35
                }
              ],
              "location": "OrderProcessSteps.I_click_reprice_button_of_product(String)"
            },
            "matchedColumns": [
              1
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the price calculation info of \"Yellow Gold Listing\"",
            "keyword": "And ",
            "line": 51,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Gold Listing",
                  "offset": 40
                }
              ],
              "location": "OrderProcessSteps.I_verify_the_price_calculation_info(String)"
            },
            "matchedColumns": [
              1
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I set \"Yellow Gold Listing\" payment option as \"Monthly\"",
            "keyword": "And ",
            "line": 52,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Gold Listing",
                  "offset": 7
                },
                {
                  "val": "Monthly",
                  "offset": 47
                }
              ],
              "location": "OrderProcessSteps.I_set_payment_option_as(String,String)"
            },
            "matchedColumns": [
              1,
              8
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click apply options to all button of product \"Yellow Gold Listing\"",
            "keyword": "And ",
            "line": 53,
            "match": {
              "arguments": [
                {
                  "val": "Yellow Gold Listing",
                  "offset": 48
                }
              ],
              "location": "OrderProcessSteps.I_click_apply_options_to_all_button_of_product(String)"
            },
            "matchedColumns": [
              1
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I add art notes for current product \"Art notes blah blah\";",
            "keyword": "And ",
            "line": 55,
            "match": {
              "arguments": [
                {
                  "val": "Art notes blah blah",
                  "offset": 37
                }
              ],
              "location": "OrderProcessSteps.I_add_art_notes_for_current_product_(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I add admin notes for current product \"Admin notes .... \";",
            "keyword": "And ",
            "line": 56,
            "match": {
              "arguments": [
                {
                  "val": "Admin notes .... ",
                  "offset": 39
                }
              ],
              "location": "OrderProcessSteps.I_add_admin_notes_for_current_product_(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the order total price",
            "keyword": "And ",
            "line": 57,
            "match": {
              "location": "OrderProcessSteps.I_verify_the_order_total_price()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I save the current order",
            "keyword": "And ",
            "line": 58,
            "match": {
              "location": "OrderProcessSteps.I_save_the_current_order()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the message \"The order was saved.\"",
            "keyword": "And ",
            "line": 59,
            "match": {
              "arguments": [
                {
                  "val": "The order was saved.",
                  "offset": 22
                }
              ],
              "location": "OrderProcessSteps.I_verify_the_message(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I propose the current order",
            "keyword": "And ",
            "line": 60,
            "match": {
              "location": "OrderProcessSteps.I_propose_the_current_order()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the current stage as \"Accept\"",
            "keyword": "And ",
            "line": 62,
            "match": {
              "arguments": [
                {
                  "val": "Accept",
                  "offset": 31
                }
              ],
              "location": "OrderProcessSteps.I_verify_the_current_stage_as(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the Order Details",
            "keyword": "And ",
            "line": 63,
            "match": {
              "location": "OrderProcessSteps.I_verify_the_Order_Details()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the Sales Person",
            "keyword": "And ",
            "line": 64,
            "match": {
              "location": "OrderProcessSteps.I_verify_the_Sales_Person()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I set the acceptance type as \"Customer ECAP\"",
            "keyword": "And ",
            "line": 65,
            "match": {
              "arguments": [
                {
                  "val": "Customer ECAP",
                  "offset": 30
                }
              ],
              "location": "OrderProcessSteps.I_set_the_acceptance_type_as(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I upload an acceptance file \"Test.pdf\"",
            "keyword": "And ",
            "line": 66,
            "match": {
              "arguments": [
                {
                  "val": "Test.pdf",
                  "offset": 29
                }
              ],
              "location": "OrderProcessSteps.I_upload_an_acceptance_file(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I accept this order",
            "keyword": "And ",
            "line": 67,
            "match": {
              "location": "OrderProcessSteps.I_accept_this_order()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the current stage as \"Checkout and Complete\"",
            "keyword": "And ",
            "line": 69,
            "match": {
              "arguments": [
                {
                  "val": "Checkout and Complete",
                  "offset": 31
                }
              ],
              "location": "OrderProcessSteps.I_verify_the_current_stage_as(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the check out summary price",
            "keyword": "And ",
            "line": 70,
            "match": {
              "location": "OrderProcessSteps.I_verify_the_check_out_summary_price()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I submit this order",
            "keyword": "And ",
            "line": 71,
            "match": {
              "location": "OrderProcessSteps.I_submit_this_order()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I verify the order price in complete page",
            "keyword": "And ",
            "line": 72,
            "match": {
              "location": "OrderProcessSteps.I_verify_the_order_price_in_complete_page()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click view order button",
            "keyword": "And ",
            "line": 73,
            "match": {
              "location": "OrderProcessSteps.I_click_view_order_button()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I select the order provisioning tab",
            "keyword": "And ",
            "line": 75,
            "match": {
              "location": "OrderDetailSteps.I_select_the_order_provisioning_tab()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "There should be an \"Animal Health\" classification",
            "keyword": "And ",
            "line": 76,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 20
                }
              ],
              "location": "OrderDetailSteps.There_should_be_an_order_item(String)"
            },
            "matchedColumns": [
              2
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "The \"Animal Health\" should contain a \"Yellow Gold Listing\" order item",
            "keyword": "And ",
            "line": 77,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 5
                },
                {
                  "val": "Yellow Gold Listing",
                  "offset": 38
                }
              ],
              "location": "OrderDetailSteps.The_should_contain_a_product(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "The \"Animal Health\" \"Yellow Gold Listing\" order item should not be complete",
            "keyword": "And ",
            "line": 78,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 5
                },
                {
                  "val": "Yellow Gold Listing",
                  "offset": 21
                }
              ],
              "location": "OrderDetailSteps.The_product_should_not_be_complete(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click complete on the \"Animal Health\" \"Yellow Gold Listing\" order item",
            "keyword": "And ",
            "line": 79,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 25
                },
                {
                  "val": "Yellow Gold Listing",
                  "offset": 41
                }
              ],
              "location": "OrderDetailSteps.I_click_complete_on_the_order_item(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "The \"Animal Health\" \"Yellow Gold Listing\" order item should be complete",
            "keyword": "Then ",
            "line": 80,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 5
                },
                {
                  "val": "Yellow Gold Listing",
                  "offset": 21
                }
              ],
              "location": "OrderDetailSteps.The_order_item_should_be_complete(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "The \"Animal Health\" should contain a \"Enhanced Content\" order item",
            "keyword": "And ",
            "line": 81,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 5
                },
                {
                  "val": "Enhanced Content",
                  "offset": 38
                }
              ],
              "location": "OrderDetailSteps.The_should_contain_a_product(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "The \"Animal Health\" \"Enhanced Content\" order item should not be complete",
            "keyword": "And ",
            "line": 82,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 5
                },
                {
                  "val": "Enhanced Content",
                  "offset": 21
                }
              ],
              "location": "OrderDetailSteps.The_product_should_not_be_complete(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click complete on the \"Animal Health\" \"Enhanced Content\" order item",
            "keyword": "And ",
            "line": 83,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 25
                },
                {
                  "val": "Enhanced Content",
                  "offset": 41
                }
              ],
              "location": "OrderDetailSteps.I_click_complete_on_the_order_item(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": "\u003d\u003d"
              }
            ],
            "name": "The \"Animal Health\" \"Enhanced Content\" order item should be complete",
            "keyword": "Then ",
            "line": 84,
            "match": {
              "arguments": [
                {
                  "val": "Animal Health",
                  "offset": 5
                },
                {
                  "val": "Enhanced Content",
                  "offset": 21
                }
              ],
              "location": "OrderDetailSteps.The_order_item_should_be_complete(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ]
          }
        ],
        "type": "scenario"
      },
      {
        "description": "",
        "name": "",
        "keyword": "Background",
        "line": 6,
        "steps": [
          {
            "result": {
              "duration": 76184533358,
              "status": "failed",
              "error_message": "org.openqa.selenium.NoSuchElementException: {\"errorMessage\":\"Unable to find element with id \u0027page.sidebar.login\u0027\",\"request\":{\"headers\":{\"Accept-Encoding\":\"gzip,deflate\",\"Connection\":\"Keep-Alive\",\"Content-Length\":\"43\",\"Content-Type\":\"application/json; charset\u003dutf-8\",\"Host\":\"localhost:21404\",\"User-Agent\":\"Apache-HttpClient/4.3.2 (java 1.5)\"},\"httpVersion\":\"1.1\",\"method\":\"POST\",\"post\":\"{\\\"using\\\":\\\"id\\\",\\\"value\\\":\\\"page.sidebar.login\\\"}\",\"url\":\"/element\",\"urlParsed\":{\"anchor\":\"\",\"query\":\"\",\"file\":\"element\",\"directory\":\"/\",\"path\":\"/element\",\"relative\":\"/element\",\"port\":\"\",\"host\":\"\",\"password\":\"\",\"user\":\"\",\"userInfo\":\"\",\"authority\":\"\",\"protocol\":\"\",\"source\":\"/element\",\"queryKey\":{},\"chunks\":[\"element\"]},\"urlOriginal\":\"/session/68a36380-313a-11e4-9de4-6b54138235fa/element\"}}\nCommand duration or timeout: 8.16 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00272.42.2\u0027, revision: \u00276a6995d31c7c56c340d6f45a76976d43506cd6cc\u0027, time: \u00272014-06-03 10:52:47\u0027\nSystem info: host: \u0027b-jenkins-tools\u0027, ip: \u002710.30.20.172\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.2.0-67-generic\u0027, java.version: \u00271.7.0_55\u0027\nSession ID: 68a36380-313a-11e4-9de4-6b54138235fa\nDriver info: org.openqa.selenium.phantomjs.PhantomJSDriver\nCapabilities [{platform\u003dLINUX, acceptSslCerts\u003dfalse, javascriptEnabled\u003dtrue, browserName\u003dphantomjs, rotatable\u003dfalse, driverVersion\u003d1.1.0, locationContextEnabled\u003dfalse, version\u003d1.9.7, cssSelectorsEnabled\u003dtrue, databaseEnabled\u003dfalse, handlesAlerts\u003dfalse, browserConnectionEnabled\u003dfalse, webStorageEnabled\u003dfalse, nativeEvents\u003dtrue, proxy\u003d{proxyType\u003ddirect}, applicationCacheEnabled\u003dfalse, driverName\u003dghostdriver, takesScreenshot\u003dtrue}]\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:526)\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:393)\n\tat org.openqa.selenium.By$ById.findElement(By.java:214)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle.clickLogin(Axle.java:110)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle$$FastClassByCGLIB$$c6b6f0c0.invoke(\u003cgenerated\u003e)\n\tat net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n\tat org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:80)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect$1.eval(RetryForAspect.java:34)\n\tat nz.co.yellow.espresso.testutils.Retry.For(Retry.java:30)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect.retryForWithNullAllowed(RetryForAspect.java:30)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect.retryFor(RetryForAspect.java:21)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:621)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:610)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:65)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:161)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n\tat org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle$$EnhancerByCGLIB$$6f7f975e.clickLogin(\u003cgenerated\u003e)\n\tat nz.co.yellow.emerge.axle.reg.AxleCommonSteps.I_click_the_login_button(AxleCommonSteps.java:60)\n\tat nz.co.yellow.emerge.axle.reg.AxleCommonSteps.That_I_am_logged_into_Axle(AxleCommonSteps.java:99)\n\tat âœ½.Given That I am logged into Axle(nz/co/yellow/emerge/axle/reg/NewOrderPriceVerify.feature:7)\nCaused by: org.openqa.selenium.remote.ScreenshotException: Screen shot has been taken\nBuild info: version: \u00272.42.2\u0027, revision: \u00276a6995d31c7c56c340d6f45a76976d43506cd6cc\u0027, time: \u00272014-06-03 10:52:47\u0027\nSystem info: host: \u0027b-jenkins-tools\u0027, ip: \u002710.30.20.172\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.2.0-67-generic\u0027, java.version: \u00271.7.0_55\u0027\nDriver info: driver.version: RemoteWebDriver\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:136)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:393)\n\tat org.openqa.selenium.By$ById.findElement(By.java:214)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle.clickLogin(Axle.java:110)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle$$FastClassByCGLIB$$c6b6f0c0.invoke(\u003cgenerated\u003e)\n\tat net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n\tat org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:689)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:80)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect$1.eval(RetryForAspect.java:34)\n\tat nz.co.yellow.espresso.testutils.Retry.For(Retry.java:30)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect.retryForWithNullAllowed(RetryForAspect.java:30)\n\tat nz.co.yellow.espresso.testutils.RetryForAspect.retryFor(RetryForAspect.java:21)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:621)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:610)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:65)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:161)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n\tat org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:622)\n\tat nz.co.yellow.emerge.selenium.axle.page.Axle$$EnhancerByCGLIB$$6f7f975e.clickLogin(\u003cgenerated\u003e)\n\tat nz.co.yellow.emerge.axle.reg.AxleCommonSteps.I_click_the_login_button(AxleCommonSteps.java:60)\n\tat nz.co.yellow.emerge.axle.reg.AxleCommonSteps.That_I_am_logged_into_Axle(AxleCommonSteps.java:99)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat cucumber.runtime.Utils$1.call(Utils.java:44)\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:12)\n\tat cucumber.runtime.Utils.invoke(Utils.java:40)\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:35)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:38)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:271)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.runBackground(CucumberScenario.java:49)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:38)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:83)\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:77)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:37)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:82)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)\nCaused by: org.openqa.selenium.remote.ErrorHandler$UnknownServerException: {\"errorMessage\":\"Unable to find element with id \u0027page.sidebar.login\u0027\",\"request\":{\"headers\":{\"Accept-Encoding\":\"gzip,deflate\",\"Connection\":\"Keep-Alive\",\"Content-Length\":\"43\",\"Content-Type\":\"application/json; charset\u003dutf-8\",\"Host\":\"localhost:21404\",\"User-Agent\":\"Apache-HttpClient/4.3.2 (java 1.5)\"},\"httpVersion\":\"1.1\",\"method\":\"POST\",\"post\":\"{\\\"using\\\":\\\"id\\\",\\\"value\\\":\\\"page.sidebar.login\\\"}\",\"url\":\"/element\",\"urlParsed\":{\"anchor\":\"\",\"query\":\"\",\"file\":\"element\",\"directory\":\"/\",\"path\":\"/element\",\"relative\":\"/element\",\"port\":\"\",\"host\":\"\",\"password\":\"\",\"user\":\"\",\"userInfo\":\"\",\"authority\":\"\",\"protocol\":\"\",\"source\":\"/element\",\"queryKey\":{},\"chunks\":[\"element\"]},\"urlOriginal\":\"/session/68a36380-313a-11e4-9de4-6b54138235fa/element\"}}\nBuild info: version: \u00272.42.2\u0027, revision: \u00276a6995d31c7c56c340d6f45a76976d43506cd6cc\u0027, time: \u00272014-06-03 10:52:47\u0027\nSystem info: host: \u0027b-jenkins-tools\u0027, ip: \u002710.30.20.172\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.2.0-67-generic\u0027, java.version: \u00271.7.0_55\u0027\nDriver info: driver.version: unknown\n"
            },
            "name": "That I am logged into Axle",
            "keyword": "Given ",
            "line": 7,
            "match": {
              "location": "AxleCommonSteps.That_I_am_logged_into_Axle()"
            }
          }
        ],
        "type": "background"
      },
      {
        "after": [
          {
            "result": {
              "duration": 124202004,
              "status": "passed"
            },
            "match": {
              "location": "HookSteps.completion(Scenario)"
            }
          }
        ],
        "id": "create-a-new-order-in-axle-and-process-it.;open-a-existing-customer-and-cancel-the-provisioning-products.;;2",
        "tags": [
          {
            "name": "@AxleOrder",
            "line": 1
          }
        ],
        "description": "",
        "name": "Open a existing customer and cancel the provisioning products.",
        "keyword": "Scenario Outline",
        "line": 118,
        "steps": [
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click the customers menu option",
            "keyword": "When ",
            "line": 91,
            "match": {
              "location": "AxleCommonSteps.I_click_the_customers_menu_option()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I search for a customer called \"MercyAscot\"",
            "keyword": "And ",
            "line": 92,
            "match": {
              "arguments": [
                {
                  "val": "MercyAscot",
                  "offset": 32
                }
              ],
              "location": "CustomersSteps.I_search_for_a_customer_called(String)"
            },
            "matchedColumns": [
              0
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I view the customer called \"MercyAscot\"",
            "keyword": "And ",
            "line": 93,
            "match": {
              "arguments": [
                {
                  "val": "MercyAscot",
                  "offset": 28
                }
              ],
              "location": "CustomersSteps.I_view_the_customer_called(String)"
            },
            "matchedColumns": [
              0
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click tab \"Existing Products\"",
            "keyword": "And ",
            "line": 94,
            "match": {
              "arguments": [
                {
                  "val": "Existing Products",
                  "offset": 13
                }
              ],
              "location": "CustomersSteps.I_click_tab(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I search for a product \"Gold Priority Listing\" with filter \"Equals\"",
            "keyword": "And ",
            "line": 95,
            "match": {
              "arguments": [
                {
                  "val": "Gold Priority Listing",
                  "offset": 24
                },
                {
                  "val": "Equals",
                  "offset": 60
                }
              ],
              "location": "CustomersSteps.I_search_for_a_product_with_filter(String,String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I expand product section \"Digital\"",
            "keyword": "And ",
            "line": 96,
            "match": {
              "arguments": [
                {
                  "val": "Digital",
                  "offset": 26
                }
              ],
              "location": "CustomersSteps.I_expand_product_section(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I cancel existing \"Digital\" products with following criteria:",
            "keyword": "And ",
            "line": 97,
            "match": {
              "arguments": [
                {
                  "val": "Digital",
                  "offset": 19
                }
              ],
              "location": "CustomersSteps.I_cancel_existing_products_with_following_criteria(String,DataTable)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "Product",
                  "Classification"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Gold Priority Listing (IGOLD)",
                  "Animal Health"
                ],
                "line": 99
              }
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I choose cancellation reason as \"Cutting back on costs\" for all",
            "keyword": "And ",
            "line": 100,
            "match": {
              "arguments": [
                {
                  "val": "Cutting back on costs",
                  "offset": 33
                }
              ],
              "location": "CustomersSteps.I_choose_cancellation_reason_as_for_all(String)"
            },
            "matchedColumns": [
              3
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I propose the current order",
            "keyword": "And ",
            "line": 101,
            "match": {
              "location": "OrderProcessSteps.I_propose_the_current_order()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I set the acceptance type as \"Customer ECAP\"",
            "keyword": "And ",
            "line": 103,
            "match": {
              "arguments": [
                {
                  "val": "Customer ECAP",
                  "offset": 30
                }
              ],
              "location": "OrderProcessSteps.I_set_the_acceptance_type_as(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I upload an acceptance file \"Test.pdf\"",
            "keyword": "And ",
            "line": 104,
            "match": {
              "arguments": [
                {
                  "val": "Test.pdf",
                  "offset": 29
                }
              ],
              "location": "OrderProcessSteps.I_upload_an_acceptance_file(String)"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I accept this order",
            "keyword": "And ",
            "line": 105,
            "match": {
              "location": "OrderProcessSteps.I_accept_this_order()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I submit this order",
            "keyword": "And ",
            "line": 107,
            "match": {
              "location": "OrderProcessSteps.I_submit_this_order()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I click view order button",
            "keyword": "And ",
            "line": 109,
            "match": {
              "location": "OrderProcessSteps.I_click_view_order_button()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I select the order provisioning tab",
            "keyword": "And ",
            "line": 110,
            "match": {
              "location": "OrderDetailSteps.I_select_the_order_provisioning_tab()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I select all items in directory \"No Directory\" and classification \"Animal Health\"",
            "keyword": "And ",
            "line": 112,
            "match": {
              "arguments": [
                {
                  "val": "No Directory",
                  "offset": 33
                },
                {
                  "val": "Animal Health",
                  "offset": 67
                }
              ],
              "location": "OrderDetailSteps.I_select_all_items_in_directory_and_classification(String,String)"
            },
            "matchedColumns": [
              2,
              4
            ]
          },
          {
            "result": {
              "status": "skipped"
            },
            "name": "I complete all selected items in order details",
            "keyword": "And ",
            "line": 113,
            "match": {
              "location": "OrderDetailSteps.I_complete_all_selected_items_in_order_details()"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": "\u003d\u003d"
              }
            ],
            "name": "I verify the message \"This order was accepted using the ECAP process. A copy of the order has now been issued by email to the Customer and Sales Rep.\"",
            "keyword": "And ",
            "line": 114,
            "match": {
              "arguments": [
                {
                  "val": "This order was accepted using the ECAP process. A copy of the order has now been issued by email to the Customer and Sales Rep.",
                  "offset": 22
                }
              ],
              "location": "OrderProcessSteps.I_verify_the_message(String)"
            }
          }
        ],
        "type": "scenario"
      }
    ],
    "uri": "nz/co/yellow/emerge/axle/reg/NewOrderPriceVerify.feature"
  }
]